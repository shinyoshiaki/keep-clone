{"version":3,"sources":["modules/main.ts","components/atoms/tagLabel/index.tsx","components/atoms/checkbox/index.tsx","components/molecules/editLabel/index.tsx","components/molecules/edit/index.tsx","containers/organisms/memo/view.tsx","hooks/useApi.tsx","graphql/client.ts","environment/index.ts","graphql/api/post.ts","containers/organisms/memo/index.tsx","components/molecules/card/index.tsx","components/molecules/editModal/index.tsx","containers/organisms/cardList/view.tsx","graphql/api/editpost.ts","graphql/api/removepost.ts","modules/ui.ts","containers/organisms/cardList/index.tsx","components/atoms/searchbar/index.tsx","components/molecules/header/index.tsx","components/atoms/tagButton/index.tsx","components/molecules/labelList/index.tsx","containers/organisms/layout/index.tsx","containers/pages/home/view.tsx","graphql/api/allpost.ts","containers/pages/home/index.tsx","serviceWorker.ts","modules/user.ts","modules/middleware/persist.ts","modules/createStore.ts","components/molecules/accountForm/index.tsx","graphql/api/login.ts","containers/organisms/login/index.tsx","containers/pages/Login.tsx","graphql/api/signup.ts","containers/organisms/signup/index.tsx","containers/pages/Signup.tsx","index.tsx"],"names":["initialState","posts","doPost","post","type","payload","doRemove","code","TagLabelAtom","_ref","label","react_default","a","createElement","style","borderRadius","backgroundColor","padding","paddingLeft","paddingRight","margin","display","fontSize","CheckboxAtom","onChange","index_es","_","checked","EditLabelMol","tagList","selected","unSelected","_useObject","useObject","newTag","state","setState","useEffect","prev","Array","from","Set","concat","Object","toConsumableArray","placeholder","e","target","value","onKeyPress","ev","key","map","tag","atoms_checkbox","b","title","text","editLabel","EditMol","onEdited","menus","initial","allTag","onClose","console","log","boxShadow","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","width","justifyContent","icons_index_es","multiline","rows","rowsMax","paddingBottom","overflowY","tagLabel","height","onClick","length","v","filter","MemoView","onSubmit","_useState","useState","_useState2","slicedToArray","open","setOpen","molecules_edit","useApi","promise","loading","setLoading","_useState3","_useState4","error","setError","fetch","asyncToGenerator","regenerator_default","mark","_callee","p","res","wrap","_context","next","t0","sent","undefined","abrupt","stop","_x","apply","this","arguments","GraphQLClient","_this","classCallCheck","httpLink","query","variables","op","result","_args","makePromise","execute","data","HttpLink","uri","graphqlClient","obj","memo","JSON","stringify","gql","_templateObject","token","catch","createMemo","time","postApi","connect","objectSpread","main","user","dispatch","session","_useApi","PostApi","flatMap","_ref2","moment","Date","now","utc","unix","toString","Math","random","_x2","_x3","view","CardMol","card","onRemove","modal","onMouseEnter","onMouseLeave","overflow","fontWeight","marginTop","wordWrap","paddingTop","EditModalMol","alignItems","maxWidth","CardListView","searchWord","viewTag","react_masonry_component_lib_default","options","fitWidth","columnWidth","sort","Number","reverse","i","includes","visible","molecules_card","close","editModal","editpost_templateObject","memoCode","editMemo","editpostApi","removepost_templateObject","removeMemo","removepostApi","ActionName","ui","edit","changed","remove","_ref3","_callee2","_context2","cardList_view","SearchBarAtom","input","marginLeft","marginRight","color","HeaderMol","drawer","enterSearch","account","position","variant","searchbar","TagButtonAtom","LabelListMol","labels","resetAll","tagButton","doSetViewTag","SET_VIEWTAG","doSetSearch","search","SET_SEARCH","_x4","withRouter","children","history","name","minHeight","header","word","labelList","push","HomeView","layout","organisms_memo","cardList","allpost_templateObject","getAllMemo","memos","split","allPostApi","init","upload","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_loop","_iterator","_step","exist","find","Symbol","iterator","done","delegateYield","t1","return","finish","_context3","forEach","home_view","Boolean","window","location","hostname","match","doLogin","localforage","config","driver","INDEXEDDB","keyList","persist","getState","action","returnValue","_arr","_i","_key","keys","setItem","loadPersist","store","opt","root","_arr2","_i2","_key2","_args2","getItem","parse","whitelist","rootReducer","combineReducers","AccoutFormMol","setName","pass","setPass","flexDirection","UserWebApi","getMe","login_templateObject","password","getUser","accountForm","organisms_login","signUpApi","signup_templateObject","createUser","organisms_signup","reduxCreateStore","applyMiddleware","logger","ReactDOM","render","es","HashRouter","Route","exact","path","component","App","Login","Signup","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.578ab157.chunk.js","sourcesContent":["export interface Post {\n  time: string;\n  code: string;\n  title: string;\n  text: string;\n  tag: string[];\n}\n\nexport interface State {\n  posts: Post[];\n}\n\nconst initialState: State = { posts: [] };\n\nexport const doPost = (post: Post) => {\n  return { type: \"MAIN_POST\" as const, payload: post };\n};\n\nexport const doRemove = (code: string) => {\n  return { type: \"MAIN_REMOVE\" as const, payload: code };\n};\n\nexport const doChange = (post: Post) => {\n  return {\n    type: \"MAIN_CHANGE\" as const,\n    payload: post\n  };\n};\n\ntype Actions =\n  | ReturnType<typeof doPost>\n  | ReturnType<typeof doRemove>\n  | ReturnType<typeof doChange>;\n\nexport default function reducer(state = initialState, action: Actions) {\n  switch (action.type) {\n    case \"MAIN_POST\": {\n      action.payload.tag = action.payload.tag.filter(v => v !== \"\");\n      return { ...state, posts: state.posts.concat(action.payload) } as State;\n    }\n    case \"MAIN_REMOVE\": {\n      return {\n        ...state,\n        posts: state.posts.filter(v => {\n          if (v.code !== action.payload) return v;\n        })\n      } as State;\n    }\n    case \"MAIN_CHANGE\": {\n      const next = state.posts.map(post => {\n        if (post.code === action.payload.code) {\n          return action.payload;\n        } else return post;\n      });\n\n      return { ...state, posts: next } as State;\n    }\n\n    default:\n      return state;\n  }\n}\n","import React, { FunctionComponent } from \"react\";\n\nconst TagLabelAtom: FunctionComponent<{ label: string }> = ({ label }) => {\n  return (\n    <div\n      style={{\n        borderRadius: 10,\n        backgroundColor: \"#EBEBEB\",\n        padding: 5,\n        paddingLeft: 10,\n        paddingRight: 10,\n        margin: 5,\n        display: \"inline-block\",\n        fontSize: 11\n      }}\n    >\n      {label}\n    </div>\n  );\n};\n\nexport default TagLabelAtom;\n","import React, { FunctionComponent } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst CheckboxAtom: FunctionComponent<{\n  onChange: (b: boolean) => void;\n  label: string;\n  style?: React.CSSProperties;\n}> = ({ onChange, label, style }) => {\n  return (\n    <div style={style}>\n      <Checkbox\n        onChange={(_, checked) => {\n          onChange(checked);\n        }}\n      />\n      {label}\n    </div>\n  );\n};\n\nexport default CheckboxAtom;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { InputBase } from \"@material-ui/core\";\n\nimport CheckboxAtom from \"../../atoms/checkbox\";\nimport useObject from \"useobject\";\n\nconst EditLabelMol: FunctionComponent<{\n  tagList: string[];\n  selected: (tag: string) => void;\n  unSelected?: (tag: string) => void;\n}> = ({ tagList, selected, unSelected }) => {\n  const { state, setState } = useObject({\n    tagList: [] as string[],\n    newTag: \"\"\n  });\n\n  useEffect(() => {\n    setState(prev => {\n      return { tagList: Array.from(new Set([...tagList, ...prev.tagList])) };\n    });\n  }, [tagList]);\n\n  return (\n    <div>\n      <InputBase\n        placeholder=\"input label\"\n        onChange={e => setState({ newTag: e.target.value })}\n        value={state.newTag}\n        onKeyPress={ev => {\n          if (ev.key === \"Enter\") {\n            setState(prev => {\n              return {\n                tagList: Array.from(new Set([prev.newTag, ...prev.tagList])),\n                newTag: \"\"\n              };\n            });\n          }\n        }}\n        style={{ padding: 10 }}\n      />\n      <div style={{ display: \"flex\" }}>\n        {state.tagList.map(tag => (\n          <CheckboxAtom\n            label={tag}\n            onChange={b => {\n              if (b) {\n                selected(tag);\n              } else {\n                if (unSelected) unSelected(tag);\n              }\n            }}\n            key={tag}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EditLabelMol;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { InputBase, Button, IconButton } from \"@material-ui/core\";\nimport useObject from \"useobject\";\nimport { Star, More } from \"@material-ui/icons\";\nimport TagLabelAtom from \"../../atoms/tagLabel\";\nimport EditLabelMol from \"../editLabel\";\n\nexport interface EditInput {\n  title: string;\n  text: string;\n  tag: string[];\n}\n\nconst initialState = {\n  title: \"\",\n  text: \"\",\n  tag: [] as string[],\n  editLabel: false\n};\n\nexport interface Props {\n  onEdited: (input: EditInput) => void;\n  onClose: () => void;\n  menus?: () => any;\n  allTag: string[];\n  initial?: { title: string; text: string; tag: string[] };\n}\n\nconst EditMol: FunctionComponent<Props> = ({\n  onEdited,\n  menus,\n  initial,\n  allTag,\n  onClose\n}) => {\n  const { state, setState } = useObject(initialState);\n\n  useEffect(() => {\n    console.log({ initial });\n    if (initial) {\n      const { title, text, tag } = initial;\n      setState({ title, text, tag });\n    }\n  }, [initial]);\n\n  return (\n    <div\n      style={{\n        borderRadius: 5,\n        boxShadow: \"0 0 4px gray\",\n        display: \"grid\",\n        gridTemplateColumns: \"1.6fr 0.2fr\",\n        gridTemplateRows: \"auto auto auto auto auto\",\n        gridTemplateAreas: `\"title star\" \"text text\" \"tag tag\" \"menu close\" \"option option\"`\n      }}\n    >\n      <div style={{ gridArea: \"title\" }}>\n        <InputBase\n          placeholder=\"title\"\n          style={{\n            width: \"100%\",\n            padding: 10\n          }}\n          onChange={e => setState({ title: e.target.value })}\n          value={state.title}\n        />\n      </div>\n      <div\n        style={{\n          gridArea: \"star\",\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        }}\n      >\n        <IconButton>\n          <Star />\n        </IconButton>\n      </div>\n      <div style={{ gridArea: \"text\" }}>\n        <InputBase\n          placeholder=\"input\"\n          multiline\n          rows={2}\n          rowsMax={30}\n          style={{\n            width: \"97%\",\n            padding: 10,\n            paddingBottom: 20,\n            overflowY: \"auto\"\n          }}\n          onChange={e => setState({ text: e.target.value })}\n          value={state.text}\n        />\n      </div>\n      <div style={{ gridArea: \"tag\" }}>\n        {state.tag.map(label => (\n          <TagLabelAtom label={label} key={label} />\n        ))}\n      </div>\n      <div style={{ gridArea: \"menu\", display: \"flex\" }}>\n        <IconButton\n          style={{ width: 50, height: 50 }}\n          onClick={() =>\n            setState(prev => {\n              return { editLabel: !prev.editLabel };\n            })\n          }\n        >\n          <More />\n        </IconButton>\n        {menus && menus()}\n      </div>\n      <div style={{ gridArea: \"close\" }}>\n        <Button\n          onClick={() => {\n            if (state.text.length > 0 || state.title.length > 0) {\n              onEdited(state);\n              setState(initialState);\n            }\n            onClose();\n          }}\n        >\n          close\n        </Button>\n      </div>\n      <div style={{ gridArea: \"option\", display: \"flex\" }}>\n        {state.editLabel && (\n          <EditLabelMol\n            tagList={allTag}\n            selected={v =>\n              setState(prev => {\n                return { tag: prev.tag.concat(v) };\n              })\n            }\n            unSelected={v =>\n              setState(prev => {\n                const next = prev.tag.filter(label => {\n                  if (label !== v) return label;\n                });\n                return { tag: next };\n              })\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditMol;\n","import React, { FC, useState } from \"react\";\nimport EditMol from \"../../../components/molecules/edit\";\nimport { Typography } from \"@material-ui/core\";\n\ntype Props = {\n  onSubmit: (title: string, text: string, tag: string[]) => void;\n  allTag: string[];\n};\n\nconst MemoView: FC<Props> = ({ onSubmit, allTag }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      {open ? (\n        <EditMol\n          onEdited={e => {\n            const { text, title, tag } = e;\n            if (text.length > 0 || title.length > 0) {\n              onSubmit(title, text, tag);\n            }\n            setOpen(false);\n          }}\n          initial={{ title: \"\", text: \"\", tag: [] }}\n          allTag={allTag}\n          onClose={() => setOpen(false)}\n        />\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            borderRadius: 5,\n            boxShadow: \"0 0 4px gray\"\n          }}\n          onClick={() => setOpen(true)}\n        >\n          <Typography style={{ padding: 10 }}>{\"メモを入力...\"}</Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MemoView;\n","import { useState } from \"react\";\n\ntype Head<T extends any[], D = never> = T extends [infer X, ...any[]] ? X : D;\n\nexport function useApi<T, A>(promise: (obj: A) => Promise<T>) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetch = async (p: Head<Parameters<typeof promise>>) => {\n    setLoading(true);\n    const res = p ? await promise(p as any) : await promise(undefined as any);\n    if (!res) setError(true);\n\n    setLoading(false);\n    return res;\n  };\n  return { loading, fetch, error };\n}\n","import { execute, makePromise, GraphQLRequest } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { gqlUrl } from \"../environment\";\n\nclass GraphQLClient {\n  private httpLink: HttpLink;\n\n  constructor() {\n    this.httpLink = new HttpLink({ uri: gqlUrl });\n  }\n\n  query = async (query: any, variables: Record<string, any> = {}) => {\n    const op: GraphQLRequest = { query, variables };\n    try {\n      const result = await makePromise(execute(this.httpLink, op));\n\n      return result.data;\n    } catch (err) {\n      throw err;\n    }\n  };\n}\n\nexport default GraphQLClient;\n","export const gqlUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://echosome.tk:1333/query\"\n    : \"https://localhost:1333/query\";\n","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { NewMemo, Memo } from \"../generated/graphql\";\n\nconst graphqlClient: GraphQLClient = new GraphQLClient();\nasync function postApi(obj: NewMemo) {\n  console.log(JSON.stringify(obj.tag));\n  const result = await graphqlClient\n    .query(\n      gql`\n        mutation createMemo {\n          createMemo(\n            input: {\n              token: \"${obj.token}\"\n              title: \"${obj.title}\"\n              text: \"${obj.text}\"\n              tag:${JSON.stringify(obj.tag)}\n            }\n          ) {\n            time\n            code\n          }\n        }\n      `\n    )\n    .catch();\n\n  if (result.createMemo) {\n    const memo = result.createMemo as Memo;\n    return {\n      time: memo.time,\n      code: memo.code\n    };\n  }\n\n  return undefined;\n}\n\nexport default postApi;\n","import React, { FunctionComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { Dispatch } from \"redux\";\nimport { doPost, State } from \"../../../modules/main\";\nimport { StateUser } from \"../../../modules/user\";\nimport MemoView from \"./view\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport PostApi from \"../../../graphql/api/post\";\nimport moment from \"moment\";\n\ninterface Props extends State, StateUser {\n  dispatch: Dispatch<any>;\n}\n\nconst MemoOrg: FunctionComponent<Props> = ({ dispatch, posts, session }) => {\n  const { loading, fetch } = useApi(PostApi);\n\n  const allTag: string[] = posts.flatMap(post => {\n    if (post.tag.length > 0) return post.tag;\n    else return [] as string[];\n  });\n\n  const onSubmit = async (title: string, text: string, tag: string[]) => {\n    if (!loading) {\n      let time = moment(Date.now())\n        .utc()\n        .unix()\n        .toString();\n      let code = Math.random().toString();\n      if (session) {\n        const res = await fetch({ title, text, token: session, tag }).catch();\n        if (res) {\n          time = res.time;\n          code = res.code;\n        }\n      }\n\n      dispatch(doPost({ title, text, tag, time, code }));\n    }\n  };\n\n  return <MemoView onSubmit={onSubmit} allTag={allTag} />;\n};\n\nexport default connect((state: ReduxState) => {\n  return { ...state.main, ...state.user };\n})(MemoOrg);\n","import React, { FunctionComponent } from \"react\";\nimport useObject from \"useobject\";\nimport { Star, MoreVert, Delete, More } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\nimport TagLabelAtom from \"../../atoms/tagLabel\";\nimport { Post } from \"../../../modules/main\";\n\nconst display = (open: boolean) => (open ? \"\" : \"none\");\n\nconst CardMol: FunctionComponent<{\n  card: Post;\n  onRemove: () => void;\n  modal: (open: boolean, close: () => void, card: Post) => any;\n}> = ({ card, onRemove, modal }) => {\n  const { state, setState } = useObject({ open: false, modal: false });\n  const { title, text, tag } = card;\n\n  return (\n    <div>\n      {modal(state.modal, () => setState({ modal: false }), card)}\n      <div\n        style={{\n          borderRadius: 5,\n          boxShadow: \"0 0 1px gray\",\n          padding: 5,\n          paddingLeft: 20\n        }}\n        onMouseEnter={() => setState({ open: true })}\n        onMouseLeave={() => setState({ open: false })}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"1.7fr 0.3fr\",\n            gridTemplateRows: \"auto auto auto auto\",\n            gridTemplateAreas: `\"title star\" \"text text\" \"tag tag\" \"menu menu\"`\n          }}\n        >\n          <div style={{ gridArea: \"title\", overflow: \"hidden\" }}>\n            <div style={{ fontWeight: \"bold\", marginTop: 10 }}>{title}</div>\n          </div>\n          <div\n            style={{ gridArea: \"text\" }}\n            onClick={() => {\n              setState({ modal: true });\n            }}\n          >\n            <div style={{ wordWrap: \"break-word\" }}>{text}</div>\n          </div>\n          <div\n            style={{\n              gridArea: \"star\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              height: 50\n            }}\n          >\n            {state.open && (\n              <IconButton style={{ width: 50 }}>\n                <Star />\n              </IconButton>\n            )}\n          </div>\n          {tag.length > 0 && (\n            <div style={{ gridArea: \"tag\", paddingTop: 10 }}>\n              {tag\n                .filter(label => label !== \"\")\n                .map(label => (\n                  <TagLabelAtom label={label} key={label} />\n                ))}\n            </div>\n          )}\n          <div\n            style={{\n              gridArea: \"menu\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: \"auto\",\n              height: 50\n            }}\n          >\n            <div style={{ display: display(state.open) }}>\n              <IconButton style={{ width: 50 }} onClick={() => onRemove()}>\n                <Delete />\n              </IconButton>\n              <IconButton style={{ width: 50 }}>\n                <More />\n              </IconButton>\n              <IconButton style={{ width: 50 }}>\n                <MoreVert />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardMol;\n","import React, { FunctionComponent } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport EditMol, { Props as EditMolProps } from \"../edit\";\n\ninterface Props extends EditMolProps {\n  open: boolean;\n}\n\nconst EditModalMol: FunctionComponent<Props> = ({\n  open,\n  initial,\n  onEdited,\n  allTag,\n  menus,\n  onClose\n}) => {\n  return (\n    <Modal open={open}>\n      <div\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <div style={{ width: 600, maxWidth: \"90vw\", backgroundColor: \"white\" }}>\n          <EditMol\n            onEdited={onEdited}\n            initial={initial}\n            allTag={allTag}\n            menus={menus}\n            onClose={onClose}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditModalMol;\n","import React, { FC } from \"react\";\nimport Masonry from \"react-masonry-component\";\nimport CardMol from \"../../../components/molecules/card\";\nimport EditModalMol from \"../../../components/molecules/editModal\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { Post } from \"../../../modules/main\";\nimport moment from \"moment\";\n\nexport interface Props {\n  posts: Post[];\n  searchWord: string;\n  viewTag: string;\n  onRemove: (code: string) => void;\n  onChange: (changed: Post) => void;\n}\n\nconst CardListView: FC<Props> = ({\n  posts,\n  searchWord,\n  viewTag,\n  onRemove,\n  onChange\n}) => {\n  const allTag: string[] = posts.flatMap(post => {\n    if (post.tag.length > 0) return post.tag;\n    else return [] as string[];\n  });\n\n  const visible = (card: Post) => {\n    if (searchWord.length > 0)\n      if (card.text.includes(searchWord) || card.title.includes(searchWord)) {\n        console.log(1, searchWord);\n        return true;\n      }\n    if (viewTag && card.tag.includes(viewTag)) {\n      console.log(2);\n      return true;\n    }\n    if (!(searchWord.length > 0) && !viewTag) {\n      console.log(3);\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Masonry options={{ fitWidth: true, columnWidth: 350 }}>\n        {posts\n          .sort((a, b) => Number(a.time) - Number(b.time))\n          .reverse()\n          .map((card, i) => {\n            if (visible(card))\n              return (\n                <div style={{ width: 350, maxWidth: \"90vw\" }} key={i}>\n                  <div style={{ padding: 10 }}>\n                    <CardMol\n                      card={card}\n                      onRemove={() => onRemove(card.code)}\n                      modal={(open, close, card) => {\n                        const { title, text, tag, code } = card;\n                        const time = moment(Date.now())\n                          .utc()\n                          .unix()\n                          .toString();\n                        return (\n                          <EditModalMol\n                            open={open}\n                            onEdited={v => {\n                              const { title, text, tag } = v;\n                              onChange({\n                                code,\n                                time,\n                                title,\n                                text,\n                                tag\n                              });\n                              close();\n                            }}\n                            onClose={() => close()}\n                            initial={{ title, text, tag }}\n                            allTag={allTag}\n                            menus={() => (\n                              <div>\n                                <IconButton\n                                  onClick={() => {\n                                    onRemove(card.code);\n                                    close();\n                                  }}\n                                >\n                                  <Delete />\n                                </IconButton>\n                              </div>\n                            )}\n                          />\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n              );\n          })}\n      </Masonry>\n    </div>\n  );\n};\n\nexport default CardListView;\n","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { Memo, EditMemo } from \"../generated/graphql\";\n\nconst graphqlClient: GraphQLClient = new GraphQLClient();\n\nasync function editpostApi(obj: EditMemo) {\n  console.log(JSON.stringify(obj.tag));\n  const result = await graphqlClient\n    .query(\n      gql`\n        mutation EditMemo {\n          editMemo(\n            input: {\n              token: \"${obj.token}\"\n              memoCode: \"${obj.memoCode}\"\n              title: \"${obj.title}\"\n              text: \"${obj.text}\"\n              tag: ${JSON.stringify(obj.tag)}\n            }\n          ) {\n            time\n          }\n        }\n      `\n    )\n    .catch();\n\n  if (result && result.editMemo) {\n    const memo = result.editMemo as Memo;\n    return {\n      time: memo.time\n    };\n  }\n\n  return undefined;\n}\n\nexport default editpostApi;\n","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { Memo, RemoveMemo } from \"../generated/graphql\";\n\nconst graphqlClient: GraphQLClient = new GraphQLClient();\n\nasync function removepostApi(obj: RemoveMemo) {\n  const result = await graphqlClient\n    .query(\n      gql`\n        mutation RemoveMemo {\n          removeMemo(\n            input: {\n              token: \"${obj.token}\"\n              memoCode: \"${obj.memoCode}\"\n            }\n          ) {\n            code\n          }\n        }\n      `\n    )\n    .catch();\n\n  console.log({ result });\n\n  if (result && result.removeMemo) {\n    const memo = result.removeMemo as Memo;\n    return {\n      code: memo.code\n    };\n  }\n\n  return undefined;\n}\n\nexport default removepostApi;\n","import { Action, Dispatch } from \"redux\";\n\nexport interface StateUi {\n  viewTag: string;\n  searchWord: string;\n}\n\nconst initialState: StateUi = { viewTag: \"\", searchWord: \"\" };\n\nenum ActionName {\n  SET_VIEWTAG = \"UI_SET_VIEWTAG\",\n  SET_SEARCH = \"UI_SET_SEARCH\"\n}\n\ninterface SetViewTagAction extends Action {\n  type: ActionName.SET_VIEWTAG;\n  payload: string | undefined;\n}\n\nexport const doSetViewTag = async (\n  tag: string | undefined,\n  dispatch: Dispatch<SetViewTagAction>\n) => {\n  dispatch({ type: ActionName.SET_VIEWTAG, payload: tag });\n};\n\ninterface SetSearchAction extends Action {\n  type: ActionName.SET_SEARCH;\n  payload: string | undefined;\n}\n\nexport const doSetSearch = async (\n  search: string | undefined,\n  dispatch: Dispatch<SetSearchAction>\n) => {\n  dispatch({ type: ActionName.SET_SEARCH, payload: search });\n};\n\ntype Actions = SetViewTagAction | SetSearchAction;\n\nexport default function reducer(state = initialState, action: Actions) {\n  switch (action.type) {\n    case ActionName.SET_VIEWTAG: {\n      return { ...state, viewTag: action.payload } as StateUi;\n    }\n    case ActionName.SET_SEARCH: {\n      return { ...state, searchWord: action.payload } as StateUi;\n    }\n    default:\n      return state;\n  }\n}\n","import React, { FunctionComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { State, doRemove, doChange, Post } from \"../../../modules/main\";\nimport { Dispatch } from \"redux\";\nimport { StateUi } from \"../../../modules/ui\";\nimport CardListView from \"./view\";\nimport { StateUser } from \"../../../modules/user\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport editpostApi from \"../../../graphql/api/editpost\";\nimport removepostApi from \"../../../graphql/api/removepost\";\n\ninterface Props extends State, StateUi, StateUser {\n  dispatch: Dispatch<any>;\n}\n\nconst CardListOrg: FunctionComponent<Props> = ({\n  posts,\n  dispatch,\n  viewTag,\n  searchWord,\n  session\n}) => {\n  const edit = useApi(editpostApi);\n\n  const editMemo = async (changed: Post) => {\n    if (session) {\n      if (!edit.loading) {\n        const res = await edit\n          .fetch({\n            memoCode: changed.code,\n            token: session,\n            ...changed\n          })\n          .catch();\n        if (res) {\n          changed.time = res.time;\n        }\n      }\n    }\n    dispatch(doChange(changed));\n  };\n\n  const remove = useApi(removepostApi);\n\n  const removeMemo = async (code: string) => {\n    if (session && !remove.loading) {\n      const res = await remove\n        .fetch({ memoCode: code, token: session })\n        .catch();\n      if (!res) {\n        console.log(\"network issue\");\n      }\n    }\n    dispatch(doRemove(code));\n  };\n\n  return (\n    <CardListView\n      posts={posts}\n      searchWord={searchWord}\n      viewTag={viewTag}\n      onRemove={removeMemo}\n      onChange={editMemo}\n    />\n  );\n};\n\nexport default connect((state: ReduxState) => {\n  return { ...state.main, ...state.ui, ...state.user };\n})(CardListOrg);\n","import React, { FunctionComponent } from \"react\";\nimport { Search, Close } from \"@material-ui/icons\";\nimport { InputBase, IconButton } from \"@material-ui/core\";\nimport useObject from \"useobject\";\n\nconst SearchBarAtom: FunctionComponent<{ onSubmit: (v: string) => void }> = ({\n  onSubmit\n}) => {\n  const { state, setState } = useObject({ input: \"\" });\n\n  return (\n    <div\n      style={{\n        marginLeft: 20,\n        borderRadius: 5,\n        backgroundColor: \"rgba(255,255,255,0.25)\",\n        marginRight: 10,\n        width: \"100%\",\n        display: \"flex\"\n      }}\n    >\n      <div\n        style={{\n          padding: 10,\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <Search />\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        style={{\n          color: \"inherit\",\n          width: \"100%\",\n          padding: 5,\n          paddingLeft: 10\n        }}\n        onChange={e => {\n          setState({ input: e.target.value });\n          onSubmit(e.target.value);\n        }}\n        value={state.input}\n      />\n      {state.input.length > 0 && (\n        <IconButton\n          onClick={() => {\n            setState({ input: \"\" });\n            onSubmit(\"\");\n          }}\n        >\n          <Close />\n        </IconButton>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBarAtom;\n","import React, { FunctionComponent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Drawer,\n  Button\n} from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport SearchBarAtom from \"../../atoms/searchbar\";\nimport useObject from \"useobject\";\n\nconst HeaderMol: FunctionComponent<{\n  enterSearch: (v: string) => void;\n  drawer: (close: () => void) => any;\n  account: () => any;\n}> = ({ drawer, enterSearch, account }) => {\n  const { state, setState } = useObject({ open: false });\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\" onClick={() => setState({ open: true })}>\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            keep\n          </Typography>\n          <SearchBarAtom onSubmit={enterSearch} />\n          <div>{account()}</div>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={state.open} onClose={() => setState({ open: false })}>\n        {drawer(() => setState({ open: false }))}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default HeaderMol;\n","import React, { FunctionComponent } from \"react\";\nimport { Label } from \"@material-ui/icons\";\n\nconst TagButtonAtom: FunctionComponent<{\n  label: string;\n  onClick: (v: string) => void;\n}> = ({ label, onClick }) => {\n  return (\n    <li style={{ display: \"flex\", padding: 10 }} onClick={() => onClick(label)}>\n      <Label\n        style={{\n          paddingRight: 30,\n          color: \"gray\"\n        }}\n      />\n      {label}\n    </li>\n  );\n};\n\nexport default TagButtonAtom;\n","import React, { FunctionComponent } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { Edit } from \"@material-ui/icons\";\nimport TagButtonAtom from \"../../atoms/tagButton\";\n\nconst LabelListMol: FunctionComponent<{\n  labels: string[];\n  onClick: (v: string) => void;\n  resetAll: () => void;\n}> = ({ labels, onClick, resetAll }) => {\n  return (\n    <div style={{ width: 270 }}>\n      <Typography style={{ padding: 10 }}>label</Typography>\n      <TagButtonAtom label=\"all\" onClick={() => resetAll()} />\n      {labels\n        .filter(v => v !== \"\")\n        .map((label, i) => (\n          <TagButtonAtom label={label} onClick={onClick} key={i} />\n        ))}\n    </div>\n  );\n};\n\nexport default LabelListMol;\n","import React, { FunctionComponent } from \"react\";\nimport HeaderMol from \"../../../components/molecules/header\";\nimport LabelListMol from \"../../../components/molecules/labelList\";\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { State } from \"../../../modules/main\";\nimport { Dispatch } from \"redux\";\nimport { doSetSearch, doSetViewTag } from \"../../../modules/ui\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { StateUser } from \"../../../modules/user\";\n\ninterface Props extends State, StateUser {\n  dispatch: Dispatch<any>;\n  history?: any;\n}\n\nconst LayoutOrg: FunctionComponent<Props> = ({\n  children,\n  posts,\n  dispatch,\n  history,\n  name\n}) => {\n  const allTag: string[] = Array.from(\n    new Set(\n      posts.flatMap(post => {\n        if (post.tag.length > 0) return post.tag;\n        else return [] as string[];\n      })\n    )\n  );\n  console.log({ allTag });\n  return (\n    <div style={{ minHeight: \"95vh\" }}>\n      <HeaderMol\n        enterSearch={word => {\n          doSetSearch(word, dispatch);\n        }}\n        drawer={close => (\n          <LabelListMol\n            labels={allTag}\n            onClick={tag => {\n              doSetViewTag(tag, dispatch);\n              close();\n            }}\n            resetAll={() => {\n              doSetViewTag(undefined, dispatch);\n              close();\n            }}\n          />\n        )}\n        account={() =>\n          name ? (\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                console.log({ history });\n                history.push(\"login\");\n              }}\n            >\n              {name}\n            </Button>\n          ) : (\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                console.log({ history });\n                history.push(\"login\");\n              }}\n            >\n              login\n            </Button>\n          )\n        }\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default withRouter(connect((state: ReduxState) => {\n  return { ...state.main, ...state.user };\n})(LayoutOrg) as any);\n","import React, { FC } from \"react\";\nimport MemoOrg from \"../../organisms/memo\";\nimport CardListOrg from \"../../organisms/cardList\";\nimport LayoutOrg from \"../../organisms/layout\";\n\nconst HomeView: FC = () => {\n  return (\n    <LayoutOrg>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <div style={{ padding: 30, width: 600, maxWidth: \"90vw\" }}>\n          <MemoOrg />\n        </div>\n      </div>\n      <CardListOrg />\n    </LayoutOrg>\n  );\n};\n\nexport default HomeView","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { Memo, GetAllMemo, AllMemo } from \"../generated/graphql\";\nimport { Post } from \"../../modules/main\";\n\nconst graphqlClient: GraphQLClient = new GraphQLClient();\n\nasync function allPostApi(obj: GetAllMemo) {\n  const result = await graphqlClient\n    .query(\n      gql`\n        query getAllMemo {\n          getAllMemo(\n            input: { token: \"${obj.token}\" }\n          ) {\n            memos {\n              owner\n              code\n              title\n              time\n              text\n              tag\n            }\n          }\n        }\n      `\n    )\n    .catch();\n\n  if (result.getAllMemo) {\n    const res = result.getAllMemo as AllMemo;\n    return res.memos\n      ? ((res.memos.map(memo => {\n          memo.tag = memo.tag.split(\",\") as any;\n          return memo;\n        }) as any) as Post[])\n      : undefined;\n  }\n\n  return undefined;\n}\n\nexport default allPostApi;\n","import React, { FunctionComponent, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { Dispatch } from \"redux\";\nimport { State, doPost, Post } from \"../../../modules/main\";\nimport { StateUser } from \"../../../modules/user\";\nimport HomeView from \"./view\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport allPostApi from \"../../../graphql/api/allpost\";\nimport postApi from \"../../../graphql/api/post\";\n\ninterface Props extends State, StateUser {\n  dispatch: Dispatch;\n}\n\nconst Home: FunctionComponent<Props> = ({ posts, session, dispatch }) => {\n  const { loading, fetch } = useApi(allPostApi);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const upload = async (memos: Post[]) => {\n    for (let post of posts) {\n      const exist = memos.find(memo => post.code === memo.code);\n      if (!exist) {\n        await postApi({ token: session!, ...post });\n      } else {\n        if (Number(post.time) > Number(exist.time))\n          await postApi({ token: session!, ...post });\n      }\n    }\n  };\n\n  const init = async () => {\n    if (session) {\n      if (!loading) {\n        const memos = await fetch({ token: session }).catch();\n        if (memos) {\n          upload(memos);\n\n          memos.forEach(memo => {\n            const exist = posts.find(post => post.code === memo.code);\n            if (!exist) {\n              dispatch(doPost(memo));\n            }\n          });\n        }\n      }\n    }\n  };\n\n  return <HomeView />;\n};\n\nexport default connect((state: ReduxState) => {\n  return { ...state.main, ...state.user };\n})(Home);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export interface StateUser {\n  name?: string;\n  session?: string;\n  code?: string;\n}\n\nconst initialState: StateUser = {};\n\nexport const doLogin = (name: string, session: string, code: string) => {\n  const type = \"UI_LOGIN\" as const;\n  return { type, payload: { name, session, code } };\n};\n\ntype Actions = ReturnType<typeof doLogin>;\n\nexport default function reducer(state = initialState, action: Actions) {\n  switch (action.type) {\n    case \"UI_LOGIN\": {\n      return {\n        ...state,\n        ...action.payload\n      } as StateUser;\n    }\n    default:\n      return state;\n  }\n}\n","import { MiddlewareAPI, Middleware, Dispatch, Store } from \"redux\";\nimport localforage from \"localforage\";\n\nlocalforage.config({ driver: localforage.INDEXEDDB });\n\nconst keyList: { [key: string]: boolean } = {};\n\nexport const persist = () => {\n  const loggerMiddleware: Middleware = ({ getState }: MiddlewareAPI) => (\n    next: Dispatch\n  ) => async action => {\n    const returnValue = next(action);\n\n    for (let key of Object.keys(getState())) {\n      keyList[key] = true;\n      await localforage.setItem(key, JSON.stringify(getState()[key]));\n    }\n\n    await localforage.setItem(\"root\", JSON.stringify(keyList));\n\n    return returnValue;\n  };\n\n  return loggerMiddleware;\n};\n\ninterface Option {\n  whitelist: string[];\n}\n\nexport const loadPersist = async (store: Store, opt: Partial<Option> = {}) => {\n  try {\n    const root: any = await localforage.getItem(\"root\");\n    console.log({ root });\n    for (let key of Object.keys(JSON.parse(root))) {\n      console.log({ key });\n      try {\n        const state = store.getState()[key];\n        const value: any = await localforage.getItem(key);\n\n        console.log({ value });\n\n        if (opt.whitelist) {\n          if (opt.whitelist.includes(key))\n            store.getState()[key] = {\n              ...state,\n              ...JSON.parse(value)\n            };\n        } else {\n          store.getState()[key] = {\n            ...state,\n            ...JSON.parse(value)\n          };\n        }\n      } catch (error) {}\n    }\n  } catch (error) {}\n};\n","import {\n  createStore as reduxCreateStore,\n  applyMiddleware,\n  combineReducers\n} from \"redux\";\nimport logger from \"redux-logger\";\nimport main, { State } from \"./main\";\nimport ui, { StateUi } from \"./ui\";\nimport user, { StateUser } from \"./user\";\nimport { persist } from \"./middleware/persist\";\n\nconst rootReducer = combineReducers({\n  main,\n  ui,\n  user\n});\n\nexport default function createStore() {\n  const store = reduxCreateStore(\n    rootReducer,\n    applyMiddleware(logger, persist())\n  );\n  return { store };\n}\n\nexport interface ReduxState {\n  main: State;\n  ui: StateUi;\n  user: StateUser;\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\n\nconst AccoutFormMol: FunctionComponent<{\n  type: string;\n  onSubmit: (name: string, pass: string) => void;\n}> = ({ type, onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  return (\n    <div\n      style={{\n        borderRadius: 5,\n        boxShadow: \"0 0 1px gray\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: 30\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexDirection: \"column\",\n          height: 210,\n          width: 500\n        }}\n      >\n        <Typography>{type}</Typography>\n        <TextField\n          variant=\"outlined\"\n          placeholder=\"name\"\n          label=\"name\"\n          onChange={e => setName(e.target.value)}\n          value={name}\n        />\n        <TextField\n          variant=\"outlined\"\n          placeholder=\"password\"\n          label=\"password\"\n          onChange={e => setPass(e.target.value)}\n          value={pass}\n        />\n        <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n          <Button\n            onClick={() => {\n              if (name && pass) {\n                onSubmit(name, pass);\n                setName(\"\");\n                setPass(\"\");\n              }\n            }}\n          >\n            {type}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccoutFormMol;\n","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { User } from \"../generated/graphql\";\n\nclass UserWebApi {\n  private graphqlClient: GraphQLClient = new GraphQLClient();\n\n  getMe = async (obj: { name: string; password: string }) => {\n    let result: any;\n\n    try {\n      result = await this.graphqlClient.query(\n        gql`\n          query getUser {\n            getUser(input: { name: \"${obj.name}\", password: \"${\n          obj.password\n        }\" }) {\n              token\n              code\n              name\n            }\n          }\n        `\n      );\n    } catch (err) {\n      throw err;\n    }\n\n    if (result.getUser) {\n      const user = result.getUser as User;\n      return {\n        token: user.token,\n        code: user.code,\n        name: user.name\n      };\n    }\n\n    return undefined;\n  };\n}\n\nexport default UserWebApi;\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport AccoutFormMol from \"../../../components/molecules/accountForm\";\nimport { doLogin } from \"../../../modules/user\";\nimport { Dispatch } from \"redux\";\nimport { History } from \"history\";\nimport { withRouter } from \"react-router-dom\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport UserWebApi from \"../../../graphql/api/login\";\n\ninterface Props {\n  dispatch: Dispatch;\n  history: History;\n}\n\nconst LoginOrg: FunctionComponent<Props> = ({ history, dispatch }) => {\n  const api = new UserWebApi();\n\n  const { loading, fetch, error } = useApi(api.getMe);\n\n  return (\n    <div>\n      {error && <p>error</p>}\n      <AccoutFormMol\n        type=\"login\"\n        onSubmit={async (name, password) => {\n          if (!loading) {\n            const res = await fetch({ name, password });\n            if (res) {\n              console.log(\"success\", { res });\n              dispatch(doLogin(res.name, res.token, res.code));\n              history.push(\"/\");\n            }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(connect(() => {\n  return {};\n})(LoginOrg) as any);\n","import React, { FunctionComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport LoginOrg from \"../organisms/login\";\nimport { Button } from \"@material-ui/core\";\nimport { History } from \"history\";\n\nconst Login: FunctionComponent<{ history: History }> = ({ history }) => {\n  return (\n    <div\n      style={{\n        height: \"95vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      <div style={{ maxWidth: \"90%\" }}>\n        <LoginOrg />\n        <Button onClick={() => history.push(\"/signup\")}>sign up</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Login as any);\n","import gql from \"graphql-tag\";\nimport GraphQLClient from \"../client\";\nimport { User } from \"../generated/graphql\";\n\nconst graphqlClient: GraphQLClient = new GraphQLClient();\n\nconst signUpApi = async (obj: { name: string; password: string }) => {\n  let result: any;\n\n  try {\n    result = await graphqlClient.query(\n      gql`\n        mutation createUser {\n          createUser(input: { name: \"${obj.name}\", password: \"${\n        obj.password\n      }\" }) {\n            code\n            token\n            name\n          }\n        }\n      `\n    );\n  } catch (err) {\n    throw err;\n  }\n\n  if (result && result.createUser) {\n    const user = result.createUser as User;\n    return {\n      token: user.token,\n      code: user.code,\n      name: user.name\n    };\n  }\n\n  return undefined;\n};\n\nexport default signUpApi;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport AccoutFormMol from \"../../../components/molecules/accountForm\";\nimport { doLogin } from \"../../../modules/user\";\nimport { Dispatch } from \"redux\";\nimport { History } from \"history\";\nimport { withRouter } from \"react-router\";\nimport { useApi } from \"../../../hooks/useApi\";\nimport signUpApi from \"../../../graphql/api/signup\";\n\ninterface Props {\n  dispatch: Dispatch;\n  history: History;\n}\n\nconst SignupOrg: FunctionComponent<Props> = ({ dispatch, history }) => {\n  const { loading, fetch, error } = useApi(signUpApi);\n  return (\n    <div>\n      {error && <p>error</p>}\n      <AccoutFormMol\n        type=\"signup\"\n        onSubmit={async (name, password) => {\n          if (!loading) {\n            const res = await fetch({ name, password });\n            if (res) {\n              console.log(\"success\", { res });\n              dispatch(doLogin(res.name, res.token, res.code));\n              history.push(\"/\");\n            }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(connect(() => {\n  return {};\n})(SignupOrg) as any);\n","import React, { FunctionComponent } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SignupOrg from \"../organisms/signup\";\nimport { Button } from \"@material-ui/core\";\nimport { History } from \"history\";\n\nconst Signup: FunctionComponent<{ history: History }> = ({ history }) => {\n  return (\n    <div\n      style={{\n        height: \"95vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      <div style={{ maxWidth: \"90%\" }}>\n        <SignupOrg />\n        <Button onClick={() => history.push(\"/login\")}>login</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Signup as any);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/pages/home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport createStore from \"./modules/createStore\";\nimport Login from \"./containers/pages/Login\";\nimport Signup from \"./containers/pages/Signup\";\nimport { loadPersist } from \"./modules/middleware/persist\";\n\nconst { store } = createStore();\n\nasync function main() {\n  await loadPersist(store);\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <div>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n        </div>\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  if (process.env.NODE_ENV === \"production\") {\n    //serviceWorker.register()\n    serviceWorker.unregister();\n  } else {\n    serviceWorker.unregister();\n  }\n}\n\nmain();\n"],"sourceRoot":""}