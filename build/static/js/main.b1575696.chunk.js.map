{"version":3,"sources":["modules/main.ts","components/molecules/header/index.tsx","components/molecules/edit/index.tsx","containers/organisms/memo/view.tsx","containers/organisms/memo/index.tsx","components/molecules/card/index.tsx","containers/organisms/cardList/view.tsx","containers/organisms/cardList/index.tsx","pages/Home.tsx","serviceWorker.ts","modules/createStore.ts","index.tsx"],"names":["ActionName","HeaderMol","react_default","a","createElement","index_es","position","color","icons_index_es","variant","style","marginLeft","borderRadius","backgroundColor","marginRight","width","display","padding","height","alignItems","justifyContent","placeholder","paddingLeft","EditMol","_ref","onClose","_useObject","useObject","title","text","state","setState","boxShadow","onChange","e","target","value","multiline","rows","rowsMax","paddingBottom","overflowY","margin","onClick","MemoOrgView","save","open","edit","initialState","posts","doPost","Object","asyncToGenerator","regenerator_default","mark","_callee","post","dispatch","wrap","_context","prev","next","type","POST","payload","stop","this","_x","_x2","apply","arguments","doRemove","_ref2","_callee2","id","_context2","REMOVE","_x3","_x4","connect","objectSpread","main","view","length","offline","tag","Math","random","toString","CardMol","card","onRemove","minHeight","onMouseEnter","onMouseLeave","gridTemplateRows","gridTemplateColumns","gridRow","gridColumn","fontWeight","wordWrap","opacity","marginTop","CardListView","cards","react_masonry_component_lib_default","options","map","i","key","molecules_card","cardList_view","Home","header","maxWidth","memo","cardList","Boolean","window","location","hostname","match","rootReducer","combineReducers","undefined","action","concat","filter","v","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","reduxCreateStore","applyMiddleware","logger","persistor","persistStore","createStore","ReactDOM","render","es","integration_react","HashRouter","Route","exact","path","component","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1575696.chunk.js","sourcesContent":["import { Action, Dispatch } from \"redux\";\n\nexport interface Post {\n  id: string;\n  title: string;\n  text: string;\n  tag: string[];\n  offline: boolean;\n}\n\nexport interface State {\n  posts: Post[];\n}\n\nconst initialState: State = { posts: [] };\n\nenum ActionName {\n  POST = \"MAIN_POST\",\n  REMOVE = \"MAIN_REMOVE\"\n}\n\ninterface PostAction extends Action {\n  type: ActionName.POST;\n  payload: Post;\n}\n\nexport const doPost = async (post: Post, dispatch: Dispatch<PostAction>) => {\n  dispatch({ type: ActionName.POST, payload: post });\n};\n\ninterface RemoveAction extends Action {\n  type: ActionName.REMOVE;\n  payload: string;\n}\n\nexport const doRemove = async (\n  id: string,\n  dispatch: Dispatch<RemoveAction>\n) => {\n  dispatch({ type: ActionName.REMOVE, payload: id });\n};\n\ntype Actions = PostAction | RemoveAction;\n\nexport default function reducer(state = initialState, action: Actions) {\n  switch (action.type) {\n    case ActionName.POST: {\n      return { ...state, posts: state.posts.concat(action.payload) } as State;\n    }\n    case ActionName.REMOVE: {\n      return {\n        ...state,\n        posts: state.posts.filter(v => {\n          if (v.id !== action.payload) return v;\n        })\n      } as State;\n    }\n    default:\n      return state;\n  }\n}\n","import React, { FunctionComponent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase\n} from \"@material-ui/core\";\nimport { Menu, Search } from \"@material-ui/icons\";\nimport MeasureWrap from \"react-fit\";\n\nconst HeaderMol: FunctionComponent = () => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\">\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            keep\n          </Typography>\n          <div\n            style={{\n              marginLeft: 20,\n              borderRadius: 5,\n              backgroundColor: \"rgba(255,255,255,0.25)\",\n              marginRight: 10,\n              width: \"100%\",\n              display: \"flex\"\n            }}\n          >\n            <div\n              style={{\n                padding: 10,\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n              }}\n            >\n              <Search />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              style={{\n                color: \"inherit\",\n                width: \"100%\",\n                padding: 5,\n                paddingLeft: 10\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default HeaderMol;\n","import React, { FunctionComponent } from \"react\";\nimport { InputBase, Button } from \"@material-ui/core\";\nimport useObject from \"useobject\";\n\nexport interface EditInput {\n  title: string;\n  text: string;\n}\n\nconst EditMol: FunctionComponent<{ onClose: (input: EditInput) => void }> = ({\n  onClose\n}) => {\n  const { state, setState } = useObject({ title: \"\", text: \"\" });\n  return (\n    <div style={{ borderRadius: 5, boxShadow: \"0 0 4px gray\" }}>\n      <div>\n        <InputBase\n          placeholder=\"title\"\n          style={{\n            width: \"100%\",\n            padding: 10\n          }}\n          onChange={e => setState({ title: e.target.value })}\n          value={state.title}\n        />\n      </div>\n      <InputBase\n        placeholder=\"input\"\n        multiline\n        rows={2}\n        rowsMax={30}\n        style={{\n          width: \"97%\",\n          padding: 10,\n          paddingBottom: 20,\n          overflowY: \"auto\"\n        }}\n        onChange={e => setState({ text: e.target.value })}\n        value={state.text}\n      />\n      <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          style={{ margin: 10 }}\n          onClick={() => {\n            onClose(state);\n            setState({ title: \"\", text: \"\" });\n          }}\n        >\n          close\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditMol;\n","import React, { FunctionComponent } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport useObject from \"useobject\";\nimport EditMol, { EditInput } from \"../../../components/molecules/edit\";\n\nconst MemoOrgView: FunctionComponent<{ save: (input: EditInput) => void }> = ({\n  save\n}) => {\n  const { state, setState } = useObject({ open: false });\n  return (\n    <div>\n      {state.open ? (\n        <EditMol\n          onClose={e => {\n            setState({ open: false });\n            save(e);\n          }}\n        />\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            borderRadius: 5,\n            boxShadow: \"0 0 4px gray\"\n          }}\n          onClick={() => setState({ open: true })}\n        >\n          <Typography style={{ padding: 10 }}>{\"メモを入力...\"}</Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MemoOrgView;\n","import React, { FunctionComponent } from \"react\";\nimport MemoOrgView from \"./view\";\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { Dispatch } from \"redux\";\nimport { doPost } from \"../../../modules/main\";\n\ninterface Props {\n  dispatch: Dispatch<any>;\n}\n\nconst MemoOrg: FunctionComponent<Props> = ({ dispatch }) => {\n  return (\n    <MemoOrgView\n      save={e => {\n        if (e.text.length > 0) {\n          doPost(\n            {\n              title: e.title,\n              text: e.text,\n              offline: true,\n              tag: [],\n              id: Math.random().toString()\n            },\n            dispatch\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default connect((state: ReduxState) => {\n  return { ...state.main };\n})(MemoOrg);\n","import React, { FunctionComponent } from \"react\";\nimport useObject from \"useobject\";\nimport { Star, MoreVert, Delete, More } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\n\nexport interface Card {\n  id: string;\n  title: string;\n  text: string;\n}\n\nconst CardMol: FunctionComponent<{\n  card: Card;\n  onRemove: (id: string) => void;\n}> = ({ card, onRemove }) => {\n  const { state, setState } = useObject({ open: false });\n  const { title, text } = card;\n  return (\n    <div\n      style={{\n        borderRadius: 5,\n        boxShadow: \"0 0 1px gray\",\n        padding: 5,\n        minHeight: 120\n      }}\n      onMouseEnter={() => setState({ open: true })}\n      onMouseLeave={() => setState({ open: false })}\n    >\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateRows: \"70% 1fr\",\n          gridTemplateColumns: \"80% 1fr\"\n        }}\n      >\n        <div style={{ gridRow: \"1/2\", gridColumn: \"1/2\" }}>\n          <p style={{ fontWeight: \"bold\" }}>{title}</p>\n          <p style={{ wordWrap: \"break-word\" }}>{text}</p>\n        </div>\n        <div\n          style={{\n            gridRow: \"1/2\",\n            gridColumn: \"2/3\",\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            opacity: state.open ? 1 : 0\n          }}\n        >\n          <IconButton style={{ width: 50, height: 50 }}>\n            <Star />\n          </IconButton>\n        </div>\n        <div\n          style={{\n            gridRow: \"2/3\",\n            gridColumn: \"1/3\",\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            opacity: state.open ? 1 : 0,\n            marginTop: \"auto\"\n          }}\n        >\n          <IconButton\n            style={{ width: 50, height: 50 }}\n            onClick={() => onRemove(card.id)}\n          >\n            <Delete />\n          </IconButton>\n          <IconButton style={{ width: 50, height: 50 }}>\n            <More />\n          </IconButton>\n          <IconButton style={{ width: 50, height: 50 }}>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardMol;\n","import React, { FunctionComponent } from \"react\";\nimport CardMol, { Card } from \"../../../components/molecules/card\";\nimport Masonry from \"react-masonry-component\";\n\nexport interface CardListProps {\n  cards: Card[];\n  onRemove: (id: string) => void;\n}\n\nconst CardListView: FunctionComponent<CardListProps> = ({\n  cards,\n  onRemove\n}) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div\n        style={{\n          width: \"90vw\"\n        }}\n      >\n        <Masonry options={{}}>\n          {cards.map((card, i) => (\n            <div style={{ width: 280 }} key={i}>\n              <div style={{ padding: 10 }}>\n                <CardMol card={card} onRemove={onRemove} />\n              </div>\n            </div>\n          ))}\n        </Masonry>\n      </div>\n    </div>\n  );\n};\n\nexport default CardListView;\n","import React, { FunctionComponent } from \"react\";\nimport CardListView from \"./view\";\nimport { connect } from \"react-redux\";\nimport { ReduxState } from \"../../../modules/createStore\";\nimport { State, doRemove } from \"../../../modules/main\";\nimport { Dispatch } from \"redux\";\n\ninterface Props extends State {\n  dispatch: Dispatch<any>;\n}\n\nconst CardListOrg: FunctionComponent<Props> = ({ posts, dispatch }) => {\n  return (\n    <CardListView\n      cards={posts}\n      onRemove={id => {\n        doRemove(id, dispatch);\n      }}\n    />\n  );\n};\n\nexport default connect((state: ReduxState) => {\n  return { ...state.main };\n})(CardListOrg);\n","import React, { FunctionComponent } from \"react\";\nimport HeaderMol from \"../components/molecules/header\";\nimport MemoOrg from \"../containers/organisms/memo\";\nimport CardListOrg from \"../containers/organisms/cardList\";\n\nconst Home: FunctionComponent = () => {\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <HeaderMol />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <div style={{ padding: 30, width: 600, maxWidth: \"50vw\" }}>\n          <MemoOrg />\n        </div>\n      </div>\n      <CardListOrg />\n    </div>\n  );\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  createStore as reduxCreateStore,\n  applyMiddleware,\n  combineReducers\n} from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport main, { State } from \"./main\";\n\nconst rootReducer = combineReducers({\n  main\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"main\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function createStore() {\n  const store = reduxCreateStore(persistedReducer, applyMiddleware(logger));\n  return { store, persistor: persistStore(store) };\n}\n\nexport interface ReduxState {\n  main: State;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./pages/Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport createStore from \"./modules/createStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { store, persistor } = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <HashRouter>\n        <div>\n          <Route exact path=\"/\" component={App} />\n        </div>\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}